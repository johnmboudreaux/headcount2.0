exports[`Card Container should match the Card Container snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    kinderData={
        Array [
            Object {
              "data": Object {
                "2004": 2,
                "2005": 3,
              },
              "location": "Akron",
            },
            Object {
              "data": Object {
                "2004": 0.03,
                "2005": 2,
              },
              "location": "Colorado",
            },
            Object {
              "data": Object {
                "2004": 6,
                "2005": 3,
              },
              "location": "Summit",
            },
          ]
    } />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Card
          dataNode={
                    Object {
                              "2004": 2,
                              "2005": 3,
                            }
          }
          handleClick={undefined}
          location="Akron"
          numberOfSelected={undefined} />,
        <Card
          dataNode={
                    Object {
                              "2004": 0.03,
                              "2005": 2,
                            }
          }
          handleClick={undefined}
          location="Colorado"
          numberOfSelected={undefined} />,
        <Card
          dataNode={
                    Object {
                              "2004": 6,
                              "2005": 3,
                            }
          }
          handleClick={undefined}
          location="Summit"
          numberOfSelected={undefined} />,
      ],
      "className": "card-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "dataNode": Object {
            "2004": 2,
            "2005": 3,
          },
          "handleClick": undefined,
          "location": "Akron",
          "numberOfSelected": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "dataNode": Object {
            "2004": 0.03,
            "2005": 2,
          },
          "handleClick": undefined,
          "location": "Colorado",
          "numberOfSelected": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "dataNode": Object {
            "2004": 6,
            "2005": 3,
          },
          "handleClick": undefined,
          "location": "Summit",
          "numberOfSelected": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Card
            dataNode={
                        Object {
                                    "2004": 2,
                                    "2005": 3,
                                  }
            }
            handleClick={undefined}
            location="Akron"
            numberOfSelected={undefined} />,
          <Card
            dataNode={
                        Object {
                                    "2004": 0.03,
                                    "2005": 2,
                                  }
            }
            handleClick={undefined}
            location="Colorado"
            numberOfSelected={undefined} />,
          <Card
            dataNode={
                        Object {
                                    "2004": 6,
                                    "2005": 3,
                                  }
            }
            handleClick={undefined}
            location="Summit"
            numberOfSelected={undefined} />,
        ],
        "className": "card-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "dataNode": Object {
              "2004": 2,
              "2005": 3,
            },
            "handleClick": undefined,
            "location": "Akron",
            "numberOfSelected": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "dataNode": Object {
              "2004": 0.03,
              "2005": 2,
            },
            "handleClick": undefined,
            "location": "Colorado",
            "numberOfSelected": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "dataNode": Object {
              "2004": 6,
              "2005": 3,
            },
            "handleClick": undefined,
            "location": "Summit",
            "numberOfSelected": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
